Super tag é usada para colocar outras linguagens.
a ST PHP é <? php    (codigo php)    ?>
voce poder colocar mais de um comando dentro Da ST

comando echo "Ola mundo"; serve para escrever na tela. ponto e vírgula serve
para indicar o fim do comando.


variáveis em php começa com $ e tem que ser em minusculo


para concatenar variáveise strings se usa o ponto final.

as aspas tem que ser duplas para concatenar com elas.


PASSANDO VALORES POR URL
vai pegar a url, acrescentar ?no final e deifinir os valores



FUNÇÕES ADICIONAIS
abs() Valor absoluto
pow() potenciação
sqrt() raiz quadrada
round() arredondamento // ate .5 arredonda para baixo, acima disso arrendonda para cima
***pode-se trocar round por ceil para arredondar sempre para cima, e floor para baixo
intval() parte inteira de um valor
number_format() manipular um numero


PHP permite referencias entre variaveis

================================================= 
OPERADORES RELACIONAIS
> maior
< menor
>= maior igual
<= menor igual
<> != diferente
== igual
=== idêntico

TERNÁRIO
expressão ? valor verdadeiro : valor falso;

&& and
|| or
xor  OU exclusivo (so é verdadeiro se os valores forem diferente, valores iguais resulta em false)
! not
================================================= 
FORMULÁRIOS

**escolha do method é muito importante


get = dados por url (mais rapido e menos seguro) $_GET[''];
post = dados por pacotes (menos rapido e pouco mais seguro) $_POST[''];

action = açao pra onde os dados serao enviados.

isse: se foi passado algo como parametro
================================================= 
ESTRUTURAS CONDICIONAIS

if(assim como no javaScript)

switch (escolhas)
switch($op) {
                case 1 :
                    echo "escolheu 1.";
                    break;
                case 2 : 
                    echo "escolheu 2.";
                    break;
                default :
                    echo "erro.";
            }

<a href="javascript:history.go(-1)">Voltar</a>          (volta uma pagina no historico de navegação)
================================================= 
WHILE
            $c = 1;
            while ($c <= 10) {
                echo "$c<br>";
                $c++;   
            };
================================================= 
DoWhile
            $c = 1;
            do {
                echo "$c ";
                $c++;
            }while ($c <= 5);
================================================= 
For 
    for($c = 1; $c <= 10; $c++ ) {
        echo "$c";
    };


     for($c = 1; $c <= 10; $c++) {
            echo "$c<br>";
        };
        echo "<br>";
        for($c = 10; $c>= 1; $c--) {
            echo "$c<br>";
        };
        echo "<br>";
        for ($c = 0; $c <= 100; $c+=5) {
            echo "$c ";
        };
        print "<br>";




        for ($c = 1; $c <= 10; $c++) {
            echo "<option value='$c'>$c</option>";
        }; OPTIONS INTERATIVOS
================================================= 
ROTINAS

procedimentos nao retornam valores, funções retornam valores.

    function soma($a, $b) {
            $s = $a + $b;
            echo "O valor da soma entre $a e $b é <span class='foco'>$s</span>.<br>";
    };
    soma($num1, $num2);



MULTIPLOS ARGUMENTOS

function somamult() {
            $arg = func_get_args();
            $tot = func_num_args();
            $soma = 0;
                for($i = 0; $i < $tot; $i++) {
                    $soma = $soma + $arg[$i];
                }
                return $soma;
        };
        $res = somamult(2,6,5,4,8);
================================================= 
PARAMETROS

passagem de parametros por valor, nao altera a variavel.

function valor($num) {
    echo "O valor da operação $num^2 + $num = ".$num += pow($num, 2);
}


passagem de parametro por referencia altera a variavel.

function somar(&$num) {
    echo "O valor da operação $num^2 + $num = ".$num += pow($num, 2); //5 ao quadrado mais 5 = 30
};

================================================= 
INCLUDE e REQUIRE

ambos incluem arquivos externos
caso o aquivo esteja inacessivel no momento, 
o include continua o procedimento.
ja o require para o script.




include_once ou require_once -> se ja tiver carregado o arquivo, nao precisa carregar de novo,
se nao, carregue pela primeira vez

================================================= 
MANIPULAR STRINGS 

printf("O %s e o %s, estão custando R$ %.2f", $prod, $prod2, $preco);
%d valores decimais
%u valores decimais positivos somente
%f numero float
%s string


print_r
( [0] => 4 [1] => 8 [2] => 3 )
sempre que quiser mostrar um array, usar uma dessas 3 maneiras


var_expor
( 0 => 4, 1 => 8, 2 => 3, )
var_dump
(mais bonito, mais informações organizadas)
//se tratando de array


strlen() //quantidade de letras na strings 

trin() // exclui os espaços desnecessarios no inicio e no final


str_word_count(,0)// conta quantas palavras existem numa string.

explode() // passa um caractere que ao ser encontrado, vai explodir e criar uma nova posição no array.

str_split //vai pegar cada letra e colocar num indice.

implode ou join // preenche a junçao de palavras do array com o caractere que foi passado.

strtolower // deixar tudo em minusculo

strtoupper // deixa tudo em maiusculo

ucfirst // primeira letra da string maiusculo

ucwords //primeira letra de cada palavra maiusculo

strrev //reverte todas as letras da string

================================================= 